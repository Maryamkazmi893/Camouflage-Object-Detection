{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":12446807,"sourceType":"datasetVersion","datasetId":7851457},{"sourceId":12448537,"sourceType":"datasetVersion","datasetId":7852617},{"sourceId":467873,"sourceType":"modelInstanceVersion","modelInstanceId":377457,"modelId":398016}],"dockerImageVersionId":31090,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"input_txt = '/kaggle/input/traindataset/COD10K-Train/Info/CAM_train.txt'\noutput_lst = '/kaggle/working/cod10k_train.lst'\n\nwith open(input_txt, 'r') as f_in, open(output_lst, 'w') as f_out:\n    for line in f_in:\n        name = line.strip().split()[0]\n        # Modify extension for ground truth (usually .png)\n        gt_name = name.replace('.jpg', '.png')\n        entry = f'Images/{name} Depths/{name} GT_Object/{gt_name}\\n'\n        f_out.write(entry)\n\nprint(\"train.lst created at:\", output_lst)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-14T05:05:29.445183Z","iopub.execute_input":"2025-07-14T05:05:29.445384Z","iopub.status.idle":"2025-07-14T05:05:29.465004Z","shell.execute_reply.started":"2025-07-14T05:05:29.445366Z","shell.execute_reply":"2025-07-14T05:05:29.464226Z"}},"outputs":[{"name":"stdout","text":"train.lst created at: /kaggle/working/cod10k_train.lst\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"import os\n\n# Define paths\nbase_dir = '/kaggle/input/traindataset/COD10K-Train/Train'\nimage_dir = os.path.join(base_dir, 'Image')\ngt_dir = os.path.join(base_dir, 'GT_Object')\n\n# Output list file\noutput_lst = '/kaggle/working/cod10k_training.lst'\n\n# Counters\nvalid_count = 0\nmissing_count = 0\n\n# Open output list file\nwith open(output_lst, 'w') as f_out:\n    # Loop over all image files in Image folder\n    for filename in sorted(os.listdir(image_dir)):\n        if filename.lower().endswith('.jpg'):\n            image_path = os.path.join('Image', filename)\n            gt_filename = filename.replace('.jpg', '.png')\n            gt_path = os.path.join('GT_Object', gt_filename)\n            \n            full_image_path = os.path.join(image_dir, filename)\n            full_gt_path = os.path.join(gt_dir, gt_filename)\n\n            if os.path.exists(full_image_path) and os.path.exists(full_gt_path):\n                # Format: Image_path  GT_path  GT_path\n                f_out.write(f'{image_path} {gt_path} {gt_path}\\n')\n                valid_count += 1\n            else:\n                print(f\"‚ùå Missing: {filename}\")\n                missing_count += 1\n\n# Report summary\nprint(f\"‚úÖ Total valid image-mask pairs: {valid_count}\")\nprint(f\"‚õî Total missing files: {missing_count}\")\nprint(f\"üìÑ Saved list file at: {output_lst}\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-14T06:57:09.453526Z","iopub.execute_input":"2025-07-14T06:57:09.454157Z","iopub.status.idle":"2025-07-14T06:57:37.884246Z","shell.execute_reply.started":"2025-07-14T06:57:09.454124Z","shell.execute_reply":"2025-07-14T06:57:37.883526Z"}},"outputs":[{"name":"stdout","text":"‚úÖ Total valid image-mask pairs: 6000\n‚õî Total missing files: 0\nüìÑ Saved list file at: /kaggle/working/cod10k_training.lst\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"import os\n\n# Paths\nbase_dir = '/kaggle/input/traindataset/COD10K-Train/Train'\nimage_dir = os.path.join(base_dir, 'Image')\ngt_dir = os.path.join(base_dir, 'GT_Object')\n\n# Output list file\noutput_lst = '/kaggle/working/cod10k_training.lst'\n\n# Counters\nvalid_count = 0\nmissing_count = 0\n\n# Generate list\nwith open(output_lst, 'w') as f_out:\n    for filename in sorted(os.listdir(image_dir)):\n        if filename.lower().endswith('.jpg'):\n            image_path = os.path.join('Train/Image', filename)\n            gt_filename = filename.replace('.jpg', '.png')\n            gt_path = os.path.join('Train/GT_Object', gt_filename)\n            \n            full_image_path = os.path.join(image_dir, filename)\n            full_gt_path = os.path.join(gt_dir, gt_filename)\n\n            if os.path.exists(full_image_path) and os.path.exists(full_gt_path):\n                f_out.write(f'{image_path} {gt_path} {gt_path}\\n')\n                valid_count += 1\n            else:\n                print(f\"‚ùå Missing: {filename}\")\n                missing_count += 1\n\nprint(f\"‚úÖ Total valid image-mask pairs: {valid_count}\")\nprint(f\"‚õî Total missing files: {missing_count}\")\nprint(f\"üìÑ Saved list file at: {output_lst}\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-14T07:05:47.681641Z","iopub.execute_input":"2025-07-14T07:05:47.682502Z","iopub.status.idle":"2025-07-14T07:05:54.238977Z","shell.execute_reply.started":"2025-07-14T07:05:47.682468Z","shell.execute_reply":"2025-07-14T07:05:54.238357Z"}},"outputs":[{"name":"stdout","text":"‚úÖ Total valid image-mask pairs: 6000\n‚õî Total missing files: 0\nüìÑ Saved list file at: /kaggle/working/cod10k_training.lst\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"import os\n\n# Paths\nbase_dir = '/kaggle/input/traindataset/COD10K-Train/Train'\nimage_dir = os.path.join(base_dir, 'Image')\ngt_dir = os.path.join(base_dir, 'GT_Object')\n\n# Output list file\noutput_lst = '/kaggle/working/cod10k_training.lst'\n\n# Counters\nvalid_count = 0\nmissing_count = 0\n\n# Generate list\nwith open(output_lst, 'w') as f_out:\n    for filename in sorted(os.listdir(image_dir)):\n        if filename.lower().endswith('.jpg'):\n            image_path = os.path.join('Train/Image', filename)\n            depth_path = image_path  # Use RGB image as fake depth\n            gt_filename = filename.replace('.jpg', '.png')\n            gt_path = os.path.join('Train/GT_Object', gt_filename)\n            \n            full_image_path = os.path.join(image_dir, filename)\n            full_gt_path = os.path.join(gt_dir, gt_filename)\n\n            if os.path.exists(full_image_path) and os.path.exists(full_gt_path):\n                f_out.write(f'{image_path} {depth_path} {gt_path}\\n')\n                valid_count += 1\n            else:\n                print(f\"‚ùå Missing: {filename}\")\n                missing_count += 1\n\nprint(f\"‚úÖ Total valid image-mask pairs: {valid_count}\")\nprint(f\"‚õî Total missing files: {missing_count}\")\nprint(f\"üìÑ Saved list file at: {output_lst}\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-14T08:42:27.977611Z","iopub.execute_input":"2025-07-14T08:42:27.977867Z","iopub.status.idle":"2025-07-14T08:43:02.493527Z","shell.execute_reply.started":"2025-07-14T08:42:27.977844Z","shell.execute_reply":"2025-07-14T08:43:02.492705Z"}},"outputs":[{"name":"stdout","text":"‚úÖ Total valid image-mask pairs: 6000\n‚õî Total missing files: 0\nüìÑ Saved list file at: /kaggle/working/cod10k_training.lst\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"!git clone https://github.com/Maryamkazmi893/Camouflage-Object-Detection.git","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-14T08:43:15.379538Z","iopub.execute_input":"2025-07-14T08:43:15.379811Z","iopub.status.idle":"2025-07-14T08:43:16.673011Z","shell.execute_reply.started":"2025-07-14T08:43:15.379791Z","shell.execute_reply":"2025-07-14T08:43:16.672097Z"}},"outputs":[{"name":"stdout","text":"Cloning into 'Camouflage-Object-Detection'...\nremote: Enumerating objects: 41, done.\u001b[K\nremote: Counting objects: 100% (41/41), done.\u001b[K\nremote: Compressing objects: 100% (38/38), done.\u001b[K\nremote: Total 41 (delta 18), reused 0 (delta 0), pack-reused 0 (from 0)\u001b[K\nReceiving objects: 100% (41/41), 39.18 KiB | 607.00 KiB/s, done.\nResolving deltas: 100% (18/18), done.\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"cat /kaggle/working/cod10k_training.lst\n","metadata":{"trusted":true,"_kg_hide-output":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"cat /kaggle/working/Camouflage-Object-Detection/cvit-main-2/solver.py","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"!python /kaggle/working/Camouflage-Object-Detection/cvit-main-2/main.py \\\n  --mode=train \\\n  --train_root=/kaggle/input/traindataset/COD10K-Train \\\n  --train_list=/kaggle/working/cod10k_training.lst \\\n  --arch=conformer \\\n  --network=conformer \\\n  --pretrained_model=/kaggle/input/pretrained-model/pytorch/default/1/Conformer_base_patch16.pth \\\n  --save_folder=/kaggle/working/checkpoints/ \\\n  --batch_size=4 \\\n  --epoch=10 \\\n  --image_size=320\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-14T08:43:24.849585Z","iopub.execute_input":"2025-07-14T08:43:24.849874Z","iopub.status.idle":"2025-07-14T08:43:58.874073Z","shell.execute_reply.started":"2025-07-14T08:43:24.849848Z","shell.execute_reply":"2025-07-14T08:43:58.873133Z"}},"outputs":[{"name":"stdout","text":"/usr/local/lib/python3.11/dist-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers\n  warnings.warn(f\"Importing from {__name__} is deprecated, please import via timm.layers\", FutureWarning)\n2025-07-14 08:43:37.764532: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\nWARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nE0000 00:00:1752482617.950755      89 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\nE0000 00:00:1752482618.007625      89 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\nLoading pre-trained ImageNet weights\nConformer-based RGB COD Model\nThe number of trainable parameters: 90204545\nThe number of parameters: 0\nFlops: 202.17 GFLOPS\nFlops: 90.2 M\nTraceback (most recent call last):\n  File \"/kaggle/working/Camouflage-Object-Detection/cvit-main-2/main.py\", line 90, in <module>\n    main(config)\n  File \"/kaggle/working/Camouflage-Object-Detection/cvit-main-2/main.py\", line 17, in main\n    train.train()\n  File \"/kaggle/working/Camouflage-Object-Detection/cvit-main-2/solver.py\", line 115, in train\n    preds = self.net(images)  # RGB-only\n            ^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py\", line 1739, in _wrapped_call_impl\n    return self._call_impl(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py\", line 1750, in _call_impl\n    return forward_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: JL_DCF.forward() missing 1 required positional argument: 'f1_all'\n","output_type":"stream"}],"execution_count":3},{"cell_type":"code","source":"import os\n\nimage_dir = '/kaggle/input/traindataset/COD10K-Train/Images'\ngt_dir = '/kaggle/input/traindataset/COD10K-Train/GT_Object'\ninput_lst = '/kaggle/working/cod10k_training.lst'\noutput_lst = '/kaggle/working/cod10k_training_clean.lst'\n\nvalid_count = 0\nskipped_count = 0\n\nwith open(input_lst, 'r') as f_in, open(output_lst, 'w') as f_out:\n    for line in f_in:\n        parts = line.strip().split()\n        if len(parts) != 3:\n            continue\n        image_rel, depth_rel, gt_rel = parts\n        image_path = os.path.join(image_dir, os.path.basename(image_rel))\n        gt_path = os.path.join(gt_dir, os.path.basename(gt_rel))\n\n        if os.path.exists(image_path) and os.path.exists(gt_path):\n            f_out.write(line)\n            valid_count += 1\n        else:\n            skipped_count += 1\n\nprint(f\"‚úÖ Valid samples: {valid_count}\")\nprint(f\"‚õî Skipped missing samples: {skipped_count}\")\nprint(\"üìÑ Cleaned train.lst saved to:\", output_lst)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-14T05:16:33.077274Z","iopub.execute_input":"2025-07-14T05:16:33.077936Z","iopub.status.idle":"2025-07-14T05:16:33.113921Z","shell.execute_reply.started":"2025-07-14T05:16:33.077911Z","shell.execute_reply":"2025-07-14T05:16:33.113243Z"}},"outputs":[{"name":"stdout","text":"‚úÖ Valid samples: 0\n‚õî Skipped missing samples: 3038\nüìÑ Cleaned train.lst saved to: /kaggle/working/cod10k_training_clean.lst\n","output_type":"stream"}],"execution_count":7},{"cell_type":"code","source":"cat /kaggle/working/cod10k_training_clean.lst","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-14T05:17:10.425629Z","iopub.execute_input":"2025-07-14T05:17:10.426632Z","iopub.status.idle":"2025-07-14T05:17:10.543970Z","shell.execute_reply.started":"2025-07-14T05:17:10.426596Z","shell.execute_reply":"2025-07-14T05:17:10.543185Z"}},"outputs":[],"execution_count":9},{"cell_type":"code","source":"import os\nimage_dir = '/kaggle/input/traindataset/COD10K-Train/Train/Image'\nprint(\"Total images:\", len(os.listdir(image_dir)))\nprint(\"Example files:\", os.listdir(image_dir)[:5])\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T11:38:41.196524Z","iopub.execute_input":"2025-07-12T11:38:41.197021Z","iopub.status.idle":"2025-07-12T11:38:41.427862Z","shell.execute_reply.started":"2025-07-12T11:38:41.197000Z","shell.execute_reply":"2025-07-12T11:38:41.427101Z"}},"outputs":[{"name":"stdout","text":"Total images: 6000\nExample files: ['COD10K-CAM-3-Flying-56-Cicada-3528.jpg', 'COD10K-NonCAM-1-Amphibian-26.jpg', 'COD10K-NonCAM-1-Amphibian-94.jpg', 'COD10K-NonCAM-5-Background-3-Sand-3857.jpg', 'COD10K-CAM-3-Flying-53-Bird-3182.jpg']\n","output_type":"stream"}],"execution_count":3},{"cell_type":"markdown","source":"# below is all previous code","metadata":{}},{"cell_type":"code","source":"# Cleaned version of CAM_test.txt to remove label column (2nd column)\nwith open('/kaggle/input/cod10k-dataset/COD10K-v3/Info/CAM_test.txt', 'r') as fin, \\\n     open('/kaggle/working/cod10k_test.lst', 'w') as fout:\n    for line in fin:\n        fout.write(line.split()[0] + '\\n')\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T07:49:13.271359Z","iopub.execute_input":"2025-07-12T07:49:13.271942Z","iopub.status.idle":"2025-07-12T07:49:13.278733Z","shell.execute_reply.started":"2025-07-12T07:49:13.271918Z","shell.execute_reply":"2025-07-12T07:49:13.278156Z"}},"outputs":[],"execution_count":5},{"cell_type":"code","source":"cat /kaggle/working/cod10k_test.lst\n","metadata":{"trusted":true,"_kg_hide-output":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"!python /kaggle/input/testdataset/cvit-main/main.py \\\n  --mode=test \\\n  --sal_mode=COD10K \\\n  --test_root=/kaggle/input/cod10k-dataset/COD10K-v3/Test \\\n  --test_list=/kaggle/input/cod10k-dataset/COD10K-v3/Info/CAM_test.txt \\\n  --pretrained_model=/kaggle/input/pretrained-model/pytorch/default/1/Conformer_base_patch16.pth \\\n  --model=/kaggle/input/pretrained-model/pytorch/default/1/Conformer_base_patch16.pth --test_folder=/kaggle/working/test_results/\n\n","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"!pip install torchsummary","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-11T10:49:08.468554Z","iopub.execute_input":"2025-07-11T10:49:08.468832Z","iopub.status.idle":"2025-07-11T10:49:12.325850Z","shell.execute_reply.started":"2025-07-11T10:49:08.468809Z","shell.execute_reply":"2025-07-11T10:49:12.325153Z"}},"outputs":[{"name":"stdout","text":"Requirement already satisfied: torchsummary in /usr/local/lib/python3.11/dist-packages (1.5.1)\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"!pip install timm","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-11T10:50:01.495673Z","iopub.execute_input":"2025-07-11T10:50:01.496403Z","iopub.status.idle":"2025-07-11T10:51:12.184847Z","shell.execute_reply.started":"2025-07-11T10:50:01.496362Z","shell.execute_reply":"2025-07-11T10:51:12.183976Z"}},"outputs":[{"name":"stdout","text":"Requirement already satisfied: timm in /usr/local/lib/python3.11/dist-packages (1.0.15)\nRequirement already satisfied: torch in /usr/local/lib/python3.11/dist-packages (from timm) (2.6.0+cu124)\nRequirement already satisfied: torchvision in /usr/local/lib/python3.11/dist-packages (from timm) (0.21.0+cu124)\nRequirement already satisfied: pyyaml in /usr/local/lib/python3.11/dist-packages (from timm) (6.0.2)\nRequirement already satisfied: huggingface_hub in /usr/local/lib/python3.11/dist-packages (from timm) (0.33.1)\nRequirement already satisfied: safetensors in /usr/local/lib/python3.11/dist-packages (from timm) (0.5.3)\nRequirement already satisfied: filelock in /usr/local/lib/python3.11/dist-packages (from huggingface_hub->timm) (3.18.0)\nRequirement already satisfied: fsspec>=2023.5.0 in /usr/local/lib/python3.11/dist-packages (from huggingface_hub->timm) (2025.5.1)\nRequirement already satisfied: packaging>=20.9 in /usr/local/lib/python3.11/dist-packages (from huggingface_hub->timm) (25.0)\nRequirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (from huggingface_hub->timm) (2.32.4)\nRequirement already satisfied: tqdm>=4.42.1 in /usr/local/lib/python3.11/dist-packages (from huggingface_hub->timm) (4.67.1)\nRequirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.11/dist-packages (from huggingface_hub->timm) (4.14.0)\nRequirement already satisfied: hf-xet<2.0.0,>=1.1.2 in /usr/local/lib/python3.11/dist-packages (from huggingface_hub->timm) (1.1.5)\nRequirement already satisfied: networkx in /usr/local/lib/python3.11/dist-packages (from torch->timm) (3.5)\nRequirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from torch->timm) (3.1.6)\nCollecting nvidia-cuda-nvrtc-cu12==12.4.127 (from torch->timm)\n  Downloading nvidia_cuda_nvrtc_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\nCollecting nvidia-cuda-runtime-cu12==12.4.127 (from torch->timm)\n  Downloading nvidia_cuda_runtime_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\nCollecting nvidia-cuda-cupti-cu12==12.4.127 (from torch->timm)\n  Downloading nvidia_cuda_cupti_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\nCollecting nvidia-cudnn-cu12==9.1.0.70 (from torch->timm)\n  Downloading nvidia_cudnn_cu12-9.1.0.70-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\nCollecting nvidia-cublas-cu12==12.4.5.8 (from torch->timm)\n  Downloading nvidia_cublas_cu12-12.4.5.8-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\nCollecting nvidia-cufft-cu12==11.2.1.3 (from torch->timm)\n  Downloading nvidia_cufft_cu12-11.2.1.3-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\nCollecting nvidia-curand-cu12==10.3.5.147 (from torch->timm)\n  Downloading nvidia_curand_cu12-10.3.5.147-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\nCollecting nvidia-cusolver-cu12==11.6.1.9 (from torch->timm)\n  Downloading nvidia_cusolver_cu12-11.6.1.9-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\nCollecting nvidia-cusparse-cu12==12.3.1.170 (from torch->timm)\n  Downloading nvidia_cusparse_cu12-12.3.1.170-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\nRequirement already satisfied: nvidia-cusparselt-cu12==0.6.2 in /usr/local/lib/python3.11/dist-packages (from torch->timm) (0.6.2)\nRequirement already satisfied: nvidia-nccl-cu12==2.21.5 in /usr/local/lib/python3.11/dist-packages (from torch->timm) (2.21.5)\nRequirement already satisfied: nvidia-nvtx-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch->timm) (12.4.127)\nCollecting nvidia-nvjitlink-cu12==12.4.127 (from torch->timm)\n  Downloading nvidia_nvjitlink_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\nRequirement already satisfied: triton==3.2.0 in /usr/local/lib/python3.11/dist-packages (from torch->timm) (3.2.0)\nRequirement already satisfied: sympy==1.13.1 in /usr/local/lib/python3.11/dist-packages (from torch->timm) (1.13.1)\nRequirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from sympy==1.13.1->torch->timm) (1.3.0)\nRequirement already satisfied: numpy in /usr/local/lib/python3.11/dist-packages (from torchvision->timm) (1.26.4)\nRequirement already satisfied: pillow!=8.3.*,>=5.3.0 in /usr/local/lib/python3.11/dist-packages (from torchvision->timm) (11.2.1)\nRequirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2->torch->timm) (3.0.2)\nRequirement already satisfied: mkl_fft in /usr/local/lib/python3.11/dist-packages (from numpy->torchvision->timm) (1.3.8)\nRequirement already satisfied: mkl_random in /usr/local/lib/python3.11/dist-packages (from numpy->torchvision->timm) (1.2.4)\nRequirement already satisfied: mkl_umath in /usr/local/lib/python3.11/dist-packages (from numpy->torchvision->timm) (0.1.1)\nRequirement already satisfied: mkl in /usr/local/lib/python3.11/dist-packages (from numpy->torchvision->timm) (2025.2.0)\nRequirement already satisfied: tbb4py in /usr/local/lib/python3.11/dist-packages (from numpy->torchvision->timm) (2022.2.0)\nRequirement already satisfied: mkl-service in /usr/local/lib/python3.11/dist-packages (from numpy->torchvision->timm) (2.4.1)\nRequirement already satisfied: charset_normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests->huggingface_hub->timm) (3.4.2)\nRequirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests->huggingface_hub->timm) (3.10)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests->huggingface_hub->timm) (2.5.0)\nRequirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests->huggingface_hub->timm) (2025.6.15)\nRequirement already satisfied: intel-openmp<2026,>=2024 in /usr/local/lib/python3.11/dist-packages (from mkl->numpy->torchvision->timm) (2024.2.0)\nRequirement already satisfied: tbb==2022.* in /usr/local/lib/python3.11/dist-packages (from mkl->numpy->torchvision->timm) (2022.2.0)\nRequirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.11/dist-packages (from tbb==2022.*->mkl->numpy->torchvision->timm) (1.4.0)\nRequirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.11/dist-packages (from mkl_umath->numpy->torchvision->timm) (2024.2.0)\nRequirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.11/dist-packages (from intel-openmp<2026,>=2024->mkl->numpy->torchvision->timm) (2024.2.0)\nDownloading nvidia_cublas_cu12-12.4.5.8-py3-none-manylinux2014_x86_64.whl (363.4 MB)\n\u001b[2K   \u001b[90m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\u001b[0m \u001b[32m363.4/363.4 MB\u001b[0m \u001b[31m4.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading nvidia_cuda_cupti_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (13.8 MB)\n\u001b[2K   \u001b[90m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\u001b[0m \u001b[32m13.8/13.8 MB\u001b[0m \u001b[31m51.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading nvidia_cuda_nvrtc_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (24.6 MB)\n\u001b[2K   \u001b[90m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\u001b[0m \u001b[32m24.6/24.6 MB\u001b[0m \u001b[31m45.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading nvidia_cuda_runtime_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (883 kB)\n\u001b[2K   \u001b[90m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\u001b[0m \u001b[32m883.7/883.7 kB\u001b[0m \u001b[31m33.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hDownloading nvidia_cudnn_cu12-9.1.0.70-py3-none-manylinux2014_x86_64.whl (664.8 MB)\n\u001b[2K   \u001b[90m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\u001b[0m \u001b[32m664.8/664.8 MB\u001b[0m \u001b[31m2.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading nvidia_cufft_cu12-11.2.1.3-py3-none-manylinux2014_x86_64.whl (211.5 MB)\n\u001b[2K   \u001b[90m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\u001b[0m \u001b[32m211.5/211.5 MB\u001b[0m \u001b[31m6.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading nvidia_curand_cu12-10.3.5.147-py3-none-manylinux2014_x86_64.whl (56.3 MB)\n\u001b[2K   \u001b[90m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\u001b[0m \u001b[32m56.3/56.3 MB\u001b[0m \u001b[31m25.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading nvidia_cusolver_cu12-11.6.1.9-py3-none-manylinux2014_x86_64.whl (127.9 MB)\n\u001b[2K   \u001b[90m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\u001b[0m \u001b[32m127.9/127.9 MB\u001b[0m \u001b[31m13.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading nvidia_cusparse_cu12-12.3.1.170-py3-none-manylinux2014_x86_64.whl (207.5 MB)\n\u001b[2K   \u001b[90m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\u001b[0m \u001b[32m207.5/207.5 MB\u001b[0m \u001b[31m7.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading nvidia_nvjitlink_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (21.1 MB)\n\u001b[2K   \u001b[90m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\u001b[0m \u001b[32m21.1/21.1 MB\u001b[0m \u001b[31m6.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m0:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hInstalling collected packages: nvidia-nvjitlink-cu12, nvidia-curand-cu12, nvidia-cufft-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, nvidia-cusparse-cu12, nvidia-cudnn-cu12, nvidia-cusolver-cu12\n  Attempting uninstall: nvidia-nvjitlink-cu12\n    Found existing installation: nvidia-nvjitlink-cu12 12.5.82\n    Uninstalling nvidia-nvjitlink-cu12-12.5.82:\n      Successfully uninstalled nvidia-nvjitlink-cu12-12.5.82\n  Attempting uninstall: nvidia-curand-cu12\n    Found existing installation: nvidia-curand-cu12 10.3.6.82\n    Uninstalling nvidia-curand-cu12-10.3.6.82:\n      Successfully uninstalled nvidia-curand-cu12-10.3.6.82\n  Attempting uninstall: nvidia-cufft-cu12\n    Found existing installation: nvidia-cufft-cu12 11.2.3.61\n    Uninstalling nvidia-cufft-cu12-11.2.3.61:\n      Successfully uninstalled nvidia-cufft-cu12-11.2.3.61\n  Attempting uninstall: nvidia-cuda-runtime-cu12\n    Found existing installation: nvidia-cuda-runtime-cu12 12.5.82\n    Uninstalling nvidia-cuda-runtime-cu12-12.5.82:\n      Successfully uninstalled nvidia-cuda-runtime-cu12-12.5.82\n  Attempting uninstall: nvidia-cuda-nvrtc-cu12\n    Found existing installation: nvidia-cuda-nvrtc-cu12 12.5.82\n    Uninstalling nvidia-cuda-nvrtc-cu12-12.5.82:\n      Successfully uninstalled nvidia-cuda-nvrtc-cu12-12.5.82\n  Attempting uninstall: nvidia-cuda-cupti-cu12\n    Found existing installation: nvidia-cuda-cupti-cu12 12.5.82\n    Uninstalling nvidia-cuda-cupti-cu12-12.5.82:\n      Successfully uninstalled nvidia-cuda-cupti-cu12-12.5.82\n  Attempting uninstall: nvidia-cublas-cu12\n    Found existing installation: nvidia-cublas-cu12 12.5.3.2\n    Uninstalling nvidia-cublas-cu12-12.5.3.2:\n      Successfully uninstalled nvidia-cublas-cu12-12.5.3.2\n  Attempting uninstall: nvidia-cusparse-cu12\n    Found existing installation: nvidia-cusparse-cu12 12.5.1.3\n    Uninstalling nvidia-cusparse-cu12-12.5.1.3:\n      Successfully uninstalled nvidia-cusparse-cu12-12.5.1.3\n  Attempting uninstall: nvidia-cudnn-cu12\n    Found existing installation: nvidia-cudnn-cu12 9.3.0.75\n    Uninstalling nvidia-cudnn-cu12-9.3.0.75:\n      Successfully uninstalled nvidia-cudnn-cu12-9.3.0.75\n  Attempting uninstall: nvidia-cusolver-cu12\n    Found existing installation: nvidia-cusolver-cu12 11.6.3.83\n    Uninstalling nvidia-cusolver-cu12-11.6.3.83:\n      Successfully uninstalled nvidia-cusolver-cu12-11.6.3.83\nSuccessfully installed nvidia-cublas-cu12-12.4.5.8 nvidia-cuda-cupti-cu12-12.4.127 nvidia-cuda-nvrtc-cu12-12.4.127 nvidia-cuda-runtime-cu12-12.4.127 nvidia-cudnn-cu12-9.1.0.70 nvidia-cufft-cu12-11.2.1.3 nvidia-curand-cu12-10.3.5.147 nvidia-cusolver-cu12-11.6.1.9 nvidia-cusparse-cu12-12.3.1.170 nvidia-nvjitlink-cu12-12.4.127\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"cd /kaggle/input/githubcode2/cvit-main","metadata":{"trusted":true,"execution":{"execution_failed":"2025-07-12T07:26:20.506Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"!ls","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-11T11:04:53.931257Z","iopub.execute_input":"2025-07-11T11:04:53.931934Z","iopub.status.idle":"2025-07-11T11:04:54.061225Z","shell.execute_reply.started":"2025-07-11T11:04:53.931909Z","shell.execute_reply":"2025-07-11T11:04:54.060531Z"}},"outputs":[{"name":"stdout","text":"conformer.py  dataset.py  main.py  README.md  solver.py  utils.py\n","output_type":"stream"}],"execution_count":3},{"cell_type":"code","source":"!python /kaggle/input/githubcode2/cvit-main/main.py --train_root=/kaggle/input/rgbdcollection/RGBDcollection --train_list=/kaggle/input/rgbdcollection/RGBDcollection/train.lst --pretrained_model=/kaggle/input/pretrained-model/pytorch/default/1/Conformer_base_patch16.pth","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-11T11:37:54.531179Z","iopub.execute_input":"2025-07-11T11:37:54.531486Z","iopub.status.idle":"2025-07-11T11:38:21.422799Z","shell.execute_reply.started":"2025-07-11T11:37:54.531439Z","shell.execute_reply":"2025-07-11T11:38:21.422037Z"}},"outputs":[{"name":"stdout","text":"/usr/local/lib/python3.11/dist-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers\n  warnings.warn(f\"Importing from {__name__} is deprecated, please import via timm.layers\", FutureWarning)\n2025-07-11 11:38:07.275487: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\nWARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nE0000 00:00:1752233887.460429      85 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\nE0000 00:00:1752233887.511944      85 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\nTraceback (most recent call last):\n  File \"/kaggle/input/githubcode2/cvit-main/main.py\", line 90, in <module>\n    main(config)\n  File \"/kaggle/input/githubcode2/cvit-main/main.py\", line 11, in main\n    train_loader = get_loader(config)\n                   ^^^^^^^^^^^^^^^^^^\n  File \"/kaggle/input/githubcode2/cvit-main/dataset.py\", line 77, in get_loader\n    dataset = ImageDataTrain(config.train_root, config.train_list, config.image_size)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/kaggle/input/githubcode2/cvit-main/dataset.py\", line 19, in __init__\n    with open(self.sal_source, 'r') as f:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\nFileNotFoundError: [Errno 2] No such file or directory: '/kaggle/input/rgbdcollection/RGBDcollection/train.lst'\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"/kaggle/input/pretrained-model/pytorch/default/1/Conformer_base_patch16.pth","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import shutil\n\n# Replace this with your actual file path from GitHub dataset\nsrc = '/kaggle/input/githubcode2/cvit-main/main.py'\ndst = '/kaggle/working/main.py'\n\nshutil.copy(src, dst)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T06:47:01.094666Z","iopub.execute_input":"2025-07-12T06:47:01.095215Z","iopub.status.idle":"2025-07-12T06:47:01.113173Z","shell.execute_reply.started":"2025-07-12T06:47:01.095184Z","shell.execute_reply":"2025-07-12T06:47:01.112438Z"}},"outputs":[{"execution_count":1,"output_type":"execute_result","data":{"text/plain":"'/kaggle/working/main.py'"},"metadata":{}}],"execution_count":1},{"cell_type":"code","source":"file_path = '/kaggle/working/main.py'\n\nwith open(file_path, 'r') as f:\n    lines = f.readlines()\n\nwith open(file_path, 'w') as f:\n    for line in lines:\n        # Fix the sal_mode choices line\n        if \"parser.add_argument('--sal_mode'\" in line:\n            line = \"    parser.add_argument('--sal_mode', type=str, default='LFSD',\\n\" \\\n                   \"                        choices=['NJU2K', 'NLPR', 'STERE', 'RGBD135', 'LFSD', 'SIP', 'ReDWeb-S', 'COD10K'])  # Test image dataset\\n\"\n        f.write(line)\n\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T06:47:18.282774Z","iopub.execute_input":"2025-07-12T06:47:18.283228Z","iopub.status.idle":"2025-07-12T06:47:18.288162Z","shell.execute_reply.started":"2025-07-12T06:47:18.283203Z","shell.execute_reply":"2025-07-12T06:47:18.287377Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"cat /kaggle/working/main.py","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T06:57:25.428123Z","iopub.execute_input":"2025-07-12T06:57:25.428725Z","iopub.status.idle":"2025-07-12T06:57:25.547074Z","shell.execute_reply.started":"2025-07-12T06:57:25.428700Z","shell.execute_reply":"2025-07-12T06:57:25.546418Z"}},"outputs":[{"name":"stdout","text":"import argparse\nimport os\nfrom dataset import get_loader\nfrom solver import Solver\nimport time\n\n\n\ndef main(config):\n    if config.mode == 'train':\n        train_loader = get_loader(config)\n        \n        if not os.path.exists(\"%s/demo-%s\" % (config.save_folder, time.strftime(\"%d\"))):\n            os.mkdir(\"%s/demo-%s\" % (config.save_folder, time.strftime(\"%d\")))\n        config.save_folder = \"%s/demo-%s\" % (config.save_folder, time.strftime(\"%d\"))\n        train = Solver(train_loader, None,config)\n        train.train()\n    elif config.mode == 'test':\n        #get_test_info(config)\n        test_loader = get_loader(config, mode='test')\n        if not os.path.exists(config.test_folder): os.makedirs(config.test_folder)\n        test = Solver(None, test_loader, config)\n        test.test()\n    else:\n        raise IOError(\"illegal input!!!\")\n\n\nif __name__ == '__main__':\n    resnet101_path = './pretrained/resnet101-5d3b4d8f.pth'\n    resnet50_path = './pretrained/resnet50-19c8e357.pth'\n    vgg16_path = './pretrained/vgg16-397923af.pth'\n    conformer_path='./pretrained/Conformer_base_patch16.pth'\n    densenet161_path = './pretrained/densenet161-8d451a50.pth'\n    pretrained_path = {'resnet101': resnet101_path, 'resnet50': resnet50_path, 'vgg16': vgg16_path,\n                       'densenet161': densenet161_path,'conformer':conformer_path}\n\n    parser = argparse.ArgumentParser()\n\n    # Hyper-parameters\n    parser.add_argument('--n_color', type=int, default=3)\n    parser.add_argument('--lr', type=float, default=0.00005)  # Learning rate resnet:4e-4\n    parser.add_argument('--wd', type=float, default=0.0005)  # Weight decay\n    parser.add_argument('--momentum', type=float, default=0.99)\n    parser.add_argument('--image_size', type=int, default=320)\n    parser.add_argument('--cuda', type=bool, default=True)\n    parser.add_argument('--device_id', type=str, default='cuda:0')\n\n    # Training settings\n    parser.add_argument('--arch', type=str, default='conformer'\n    parser.add_argument('--pretrained_model', type=str, default=pretrained_path)  # pretrained backbone model\n    parser.add_argument('--epoch', type=int, default=100)\n    parser.add_argument('--batch_size', type=int, default=4)  # only support 1 now\n    parser.add_argument('--num_thread', type=int, default=0)\n    parser.add_argument('--load', type=str, default='')  # pretrained JL-DCF model\n    parser.add_argument('--save_folder', type=str, default='checkpoints/')\n    parser.add_argument('--epoch_save', type=int, default=5)\n    parser.add_argument('--iter_size', type=int, default=10)\n    parser.add_argument('--show_every', type=int, default=50)\n    parser.add_argument('--network', type=str, default='conformer'\n    #conformer setting\n    parser.add_argument('--patch_size', type=int, default=16)\n    parser.add_argument('--channel_ratio', type=int, default=4)\n    parser.add_argument('--embed_dim', type=int, default=384)\n    parser.add_argument('--depth', type=int, default=12)\n    parser.add_argument('--num_heads', type=int, default=6)\n    parser.add_argument('--mlp_ratio', type=int, default=4)\n    # Train data\n    parser.add_argument('--train_root', type=str, default='../RGBDcollection')\n    parser.add_argument('--train_list', type=str, default='../RGBDcollection/train.lst')\n    \n\n    # Testing settings\n    parser.add_argument('--model', type=str, default='checkpoints/vgg16.pth')  # Snapshot\n    parser.add_argument('--test_folder', type=str, default='test/vgg16/LFSD/')  # Test results saving folder\nparser.add_argument('--sal_mode', type=str, default='LFSD', choices=['NJU2K', 'NLPR', 'STERE', 'RGBD135', 'LFSD', 'SIP', 'ReDWeb-S', 'COD10K'])  # Test image dataset\n    parser.add_argument('--test_root', type=str, default='../testsod')\n    parser.add_argument('--test_list', type=str, default='../testsod/test.lst')\n    # Misc\n    config = parser.parse_args()\n\n    if not os.path.exists(config.save_folder):\n        os.mkdir(config.save_folder)\n\n\n\n    main(config)\n","output_type":"stream"}],"execution_count":8},{"cell_type":"code","source":"\n\nfile_path = '/kaggle/working/main.py'  # Adjust this if needed\n\nwith open(file_path, 'r') as f:\n    lines = f.readlines()\n\nnew_lines = []\nsal_mode_added = False\n\nfor line in lines:\n    # Remove all previous sal_mode lines\n    if \"parser.add_argument('--sal_mode'\" in line:\n        continue\n    # Remove orphaned 'choices=' lines that were part of sal_mode\n    elif \"choices=[\" in line:\n        continue\n    else:\n        new_lines.append(line)\n\n# Insert correct single line for sal_mode after the test_folder argument\ncorrect_line = \"parser.add_argument('--sal_mode', type=str, default='LFSD', choices=['NJU2K', 'NLPR', 'STERE', 'RGBD135', 'LFSD', 'SIP', 'ReDWeb-S', 'COD10K'])  # Test image dataset\\n\"\n\n# Re-insert at the appropriate place (after test_folder argument)\nfor idx, line in enumerate(new_lines):\n    if \"--test_folder\" in line:\n        new_lines.insert(idx + 1, correct_line)\n        break\n\n# Write the cleaned version back\nwith open(file_path, 'w') as f:\n    f.writelines(new_lines)\n\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T06:57:07.239858Z","iopub.execute_input":"2025-07-12T06:57:07.240433Z","iopub.status.idle":"2025-07-12T06:57:07.247745Z","shell.execute_reply.started":"2025-07-12T06:57:07.240398Z","shell.execute_reply":"2025-07-12T06:57:07.246840Z"}},"outputs":[],"execution_count":7},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}